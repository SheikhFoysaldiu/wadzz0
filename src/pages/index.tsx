import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { PostCard } from "~/components/creator/post";

import { api } from "~/utils/api";
import { CreatorAvater } from "./search";

export default function Home() {
  return (
    <>
      <Head>
        <title>Patreon</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">
        <AuthShowcase />
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center">
      <AllCreators />
      <AllRecentPost />
    </div>
  );
}

function AllCreators() {
  const { data: creators } = api.creator.getAllCreator.useQuery();

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">All creators</p>
      <ul>
        {creators?.map((creator) => (
          <li key={creator.id}>
            <CreatorAvater creator={creator} />
          </li>
        ))}
      </ul>
    </div>
  );
}

function AllRecentPost() {
  const { data: posts, isLoading } = api.post.getAllRecentPosts.useQuery();
  const { data: user_subscriptions, isLoading: isLoading2 } =
    api.member.getAllSubscription.useQuery();

  if (isLoading2) return <div>Loading to fetch membership...</div>;

  if (isLoading) return <div>Loading...</div>;
  if (posts) {
    return (
      <div className="flex flex-col gap-4">
        {posts.map((post) => (
          <PostCard
            comments={post._count.Comment}
            creator={post.creator}
            key={post.id}
            post={post}
            like={post._count.Like}
            show={
              !post.subscription ||
              user_subscriptions?.some(
                (el) =>
                  el.subscription.creatorId == post.creatorId &&
                  post.subscription &&
                  el.subscription.priority <= post.subscription.priority,
              )
            }
          />
        ))}
      </div>
    );
  }
}
